# docker-compose.yml

volumes:
  pg_data:
  static_volume:
  media:
networks:
  backend-network:
    driver: bridge
services:
  foodgram_db:
    image: postgres:16
    env_file: .env
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - backend-network
    restart: unless-stopped
  backend:
    build: ./backend/
    env_file: .env
    command: >
      sh -c "python manage.py collectstatic --noinput
      && cp -r /app/collected_static/. /backend_static/static/
      && gunicorn --bind 0:8000 backend.wsgi"
    depends_on:
      - foodgram_db
    volumes:
      - static_volume:/backend_static
      - media:/app/media
    networks:
      - backend-network
    restart: unless-stopped 
  frontend:
    build: ./frontend/
    container_name: foodgram-front
    env_file: .env
    command: sh -c "npm run build && cp -r /app/build/. /frontend_static/ && tail -f /dev/null"
    networks:
      - backend-network
    volumes:
      - static_volume:/frontend_static
  nginx:
    build: ./infra/
    container_name: foodgram-proxy
    env_file: .env
    ports:
      - "8000:80"
    volumes:
      - ./docs/:/usr/share/nginx/html/api/docs/
      - static_volume:/staticfiles
      - media:/app/media
    networks:
      - backend-network
    depends_on:
      - backend
